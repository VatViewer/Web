// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VatViewer.Shared.Data;

#nullable disable

namespace VatViewer.Shared.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230316161952_Indexes")]
    partial class Indexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VatViewer.Shared.Models.Atis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Callsign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cid")
                        .HasColumnType("integer");

                    b.Property<int>("Facility")
                        .HasColumnType("integer");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("LogoffTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LogonTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("TextAtisRaw")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Callsign");

                    b.HasIndex("Cid");

                    b.HasIndex("LogonTime");

                    b.ToTable("Atis");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Controller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Callsign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cid")
                        .HasColumnType("integer");

                    b.Property<string>("ControllerInfoRaw")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Facility")
                        .HasColumnType("integer");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<DateTimeOffset?>("LogoffTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LogonTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Callsign");

                    b.HasIndex("Cid");

                    b.HasIndex("Frequency");

                    b.HasIndex("LogonTime");

                    b.ToTable("Controllers");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.FlightPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aircraft")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Arrival")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cid")
                        .HasColumnType("integer");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlightRules")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Aircraft");

                    b.HasIndex("Arrival");

                    b.HasIndex("Cid");

                    b.HasIndex("Departure");

                    b.HasIndex("Timestamp");

                    b.ToTable("FlightPlans");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Callsign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cid")
                        .HasColumnType("integer");

                    b.Property<int?>("FlightPlanId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<DateTimeOffset?>("LogoffTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LogonTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Callsign");

                    b.HasIndex("Cid");

                    b.HasIndex("FlightPlanId");

                    b.HasIndex("LogoffTime");

                    b.HasIndex("LogonTime");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Altitude")
                        .HasColumnType("integer");

                    b.Property<int>("GroundSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("PilotId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Latitude");

                    b.HasIndex("Longitude");

                    b.HasIndex("PilotId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Prefile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Callsign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cid")
                        .HasColumnType("integer");

                    b.Property<int?>("FlightPlanId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Cid");

                    b.HasIndex("FlightPlanId");

                    b.ToTable("Prefliles");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Pilot", b =>
                {
                    b.HasOne("VatViewer.Shared.Models.FlightPlan", "FlightPlan")
                        .WithMany()
                        .HasForeignKey("FlightPlanId");

                    b.Navigation("FlightPlan");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Position", b =>
                {
                    b.HasOne("VatViewer.Shared.Models.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotId");

                    b.Navigation("Pilot");
                });

            modelBuilder.Entity("VatViewer.Shared.Models.Prefile", b =>
                {
                    b.HasOne("VatViewer.Shared.Models.FlightPlan", "FlightPlan")
                        .WithMany()
                        .HasForeignKey("FlightPlanId");

                    b.Navigation("FlightPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
